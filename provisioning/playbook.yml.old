---
- hosts: all
  sudo: True

# setting for Vagrant
  user: vagrant

# setting for a Beaglebone Black
#  user: debian
#  remote_user: debian

  vars:
# settings for Vagrant Box
    platform: vagrant
    startup_method: systemd
    server_name: 192.168.1.2
    http_port: 1880
    install_path: /vagrant
    run_as: vagrant
    #node-red username
    username: terxw

# settings for a Beaglebone Black
# connect your BBB as described here: http://beagleboard.org/getting-started
#    platform: beaglebone-black
#    startup_method: systemd
#    server_name: 192.168.7.2
#    http_port: 1880
#    install_path: /opt/nodered
#    run_as: srv-node-red

  tasks:

    - name: install a couple of required packages
      apt: pkg={{item}} state=latest update_cache=yes
      with_items:
        - git
        - mosquitto
        - nodejs
        - npm

    # some npm modules expect nodejs to be called node
    - name: quick workaround for npm modules expecting nodejs to be node
      file: src=/usr/bin/nodejs dest=/usr/bin/node state=link

    - name: "install first requiered packages"
      npm: "name={{item}}  global=yes"
      with_items:
        - node-pre-gyp
        - node-gyp
        - grunt-cli

    - stat: path={{ install_path }}/node-red/red.js
      register: nodered_git_rules

    - name: install node-red from github
      git: repo=git://github.com/node-red/node-red.git
           accept_hostkey=yes
           dest={{ install_path }}/node-red
      ignore_errors: True
      when: nodered_git_rules.stat.exists == false

    # - name: update node-red from github if already cloned
    #   git: repo=git://github.com/node-red/node-red.git
    #        update=yes
    #        accept_hostkey=yes
    #        dest={{ install_path }}/node-red
    #   #ignore_errors: True
    #   when: nodered_git_rules.stat.exists == True

    - name: "install serialport with commandline options"
      local_action:
         module: shell
         _raw_params: "/usr/bin/npm install --no-bin-links serialport"
         chdir: "{{ install_path }}/node-red/"
         became: true

    # - name: "install grunt localy"
    #   local_action:
    #      module: shell
    #      _raw_params: "/usr/bin/npm install grunt --save-dev"
    #      chdir: "{{ install_path }}/node-red/"

    - name: actual build of node-red
      local_action:
         module: shell
         _raw_params: "/usr/bin/npm run build"
         chdir: "{{ install_path }}/node-red/"

    - name: install node-red from local checkout with npm
      npm: path={{ install_path }}/node-red

    - name: install required npm packages
      npm: name={{item}} path={{ install_path }}/node-red/
      with_items:
      #- serialport
        - feedreader
        - js2xmlparser
        - arduino-firmata
        - fs.notify
        - redis
        - mongodb

    - name: copy freeboard enabled settings to the right location
      template: src=settings.js.j2 dest={{ install_path }}/node-red/settings.js

    - name: fetch node-red extra nodes from git
      git: repo=git://github.com/node-red/node-red-nodes.git
           accept_hostkey=yes
           dest={{ install_path }}/node-red/node-red-nodes

    - name: install some extra nodes
      npm: name={{item}} path={{ install_path }}/node-red/
      with_items:
        - node-red-node-ping
        - node-red-node-leveldb
        - node-red-node-xmpp
        - node-red-node-suncalc
        - ntwitter
        - oauth

    - name: node auth module
      npm: name=node-red-contrib-ldap-auth global=yes


    - name: install Beaglebone Black node
      npm: name={{item}} path={{ install_path }}/node-red/
      with_items:
        - node-red-node-beaglebone
        - bonescript
      when: platform == "beaglebone-black"

    - name: copy demo flows to node red directory
      copy: src=flows.json dest={{ install_path }}/node-red/

    # install freeboard
    - stat: path={{ install_path }}/freeboard/package.json
      register: freeboard_git_rules_1

    - name: install freeboard.io from git
      git: repo=git://github.com/Freeboard/freeboard.git
           accept_hostkey=yes
           dest={{ install_path }}/freeboard
      ignore_errors: True
      when: freeboard_git_rules_1.stat.exists == false

    - stat: path={{ install_path }}/freeboard-plugins/datasources/plugin_node.js
      register: freeboard_git_rules_2

    - name: install freeboard.io plugins for websockets from git
      git: repo=git://github.com/Freeboard/plugins.git
           accept_hostkey=yes
           dest={{ install_path }}/freeboard-plugins
      ignore_errors: True
      when: freeboard_git_rules_2.stat.exists == false

    - name: copy freeboard plugin to the right location
      copy: src=../freeboard-plugins/datasources/plugin_node.js dest={{ install_path }}/freeboard/js/freeboard/plugins/

    - name: get freeboard websocket plugin from gist
      get_url: url=https://gist.githubusercontent.com/dceejay/fb47301b759222e05f84/raw/645966d6dc9b7ce3a06783d5aaa09ca6b1ae00fd/wsDataSourcePlugin.js dest={{ install_path }}/freeboard/js/

    - name: copy modified freeboard frontpage to the webroot
      copy: src=freeboard-websocket-enabled-index.html dest={{ install_path }}/freeboard/index.html

    - name: copy counter demo dashboard to freeboard webroot
      template: src=demo_websocket_counter.json.j2 dest={{ install_path }}/freeboard/demo_websocket_counter.json

    - name: create service user if not existent
      user: name={{ run_as }} createhome=no shell=/bin/bash

    - name: set ownership of the node red directory to the system user
      file: path={{ install_path }} owner={{ run_as }} group={{ run_as }} recurse=yes

    - name: copy nodered upstart configuration
      template: src=nodered-upstart.conf.j2 dest=/etc/init/nodered.conf
      when: startup_method == "upstart"

    - name: copy nodered systemd configuration
      template: src=nodered-systemd.service.j2 dest=/etc/systemd/system/nodered.service
      when: startup_method == "systemd"

    - name: start node red
      service: name=nodered state=started

    #- debug: "msg=Browse here for websocket counter example dashboard: http://{{ server_name }}:{{ http_port }}/?load=demo_websocket_counter.json "
    #- debug: "msg=Browse here for node red configuration editor: http://{{ server_name }}:{{ http_port }}/admin "

  handlers:
